<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE html>
<html  b:css='false' b:defaultwidgetversion='2' b:layoutsVersion='3' b:responsive='true' b:templateVersion='1.3.0'>
<head>
    <meta charset='UTF-8'/>
    <meta content='width=device-width, initial-scale=1' name='viewport'/>
    <title><data:blog.title/></title>
    <b:skin><![CDATA[
      /* يمكنك إضافة CSS هنا */
    ]]></b:skin>
</head>
<body>
<Script Language='Javascript'>

(function() {
    function utf8Base64Decode(base64) {
        return decodeURIComponent(escape(atob(base64)));
    }
    var decodedHtml = utf8Base64Decode(&quot;&quot;); 
    document.write(decodedHtml);
})();
</Script>
    <b:section id='main' class='blog-posts' showaddelement='no'>
        <b:widget id='Blog1' type='Blog'/>
    </b:section>
</body>
</html>
